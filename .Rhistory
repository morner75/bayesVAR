dplyr::arrange(eval(name[order]))
eval(name[order]
eval(name[order])
eval(name[order])
as.data.frame(mat) |>
tibble::rownames_to_column()
# colnm <- colnames(mat)
# rownm <- rownames(mat)
var_order <- if(order==2) c(name[2],name[1],name[3])
as.data.frame(mat) |>
tibble::rownames_to_column(var=name1) |>
tidyr::pivot_longer(!one_of(name[1]),names_to=name[2],values_to = name[3]) |>
dplyr::select(one_of(var_order)) |>
dplyr::arrange(eval(name[order]))
as.data.frame(mat) |>
tibble::rownames_to_column(var=name1) |>
tidyr::pivot_longer(!one_of(name[1]),names_to=name[2],values_to = name[3]) |>
dplyr::select(one_of(var_order)) |>
dplyr::arrange(sym(name[order]))
as.data.frame(mat) |>
tibble::rownames_to_column(var=name1) |>
tidyr::pivot_longer(!one_of(name[1]),names_to=name[2],values_to = name[3]) |>
dplyr::select(one_of(var_order)) |>
dplyr::arrange(slect(sym(name[order])))
as.data.frame(mat) |>
tibble::rownames_to_column(var=name1) |>
tidyr::pivot_longer(!one_of(name[1]),names_to=name[2],values_to = name[3]) |>
dplyr::select(one_of(var_order)) |>
dplyr::arrange(select(sym(name[order])))
sym(name[order])
as.data.frame(mat) |>
tibble::rownames_to_column(var=name[1]) |>
tidyr::pivot_longer(!one_of(name[1]),names_to=name[2],values_to = name[3]) |>
dplyr::select(one_of(var_order)) |>
dplyr::arrange(select(sym(name[order])))
as.data.frame(mat) |>
tibble::rownames_to_column(var=name[1]) |>
tidyr::pivot_longer(!one_of(name[1]),names_to=name[2],values_to = name[3]) |>
dplyr::select(one_of(var_order)) |>
dplyr::arrange(sym(name[order]))
# colnm <- colnames(mat)
# rownm <- rownames(mat)
var_order <- if(order==2) c(name[2],name[1],name[3])
as.data.frame(mat) |>
tibble::rownames_to_column(var=name[1]) |>
tidyr::pivot_longer(!one_of(name[1]),names_to=name[2],values_to = name[3]) |>
dplyr::select(one_of(var_order))
rank(tb[[1]])
tb <- as.data.frame(mat) |>
tibble::rownames_to_column(var=name[1]) |>
tidyr::pivot_longer(!one_of(name[1]),names_to=name[2],values_to = name[3]) |>
dplyr::select(one_of(var_order))
rank(tb[[1]])
arrange(tb, rank(tb[[1]]))
tb <- as.data.frame(mat) |>
tibble::rownames_to_column(var="var1") |>
tidyr::pivot_longer(!var1,names_to="var2",values_to = "value")
tb <- as.data.frame(mat) |>
tibble::rownames_to_column(var="var1") |>
tidyr::pivot_longer(!var1,names_to="var2",values_to = "value")
tb <- as.data.frame(mat) |>
tibble::rownames_to_column(var="var1") |>
tidyr::pivot_longer(!var1,names_to="var2",values_to = "value")
as.data.frame(mat) |>
tibble::rownames_to_column(var="var1") |>
tidyr::pivot_longer(!var1,names_to="var2",values_to = "value")
tb <- as.data.frame(mat) |>
tibble::rownames_to_column(var="var1") |>
tidyr::pivot_longer(!var1,names_to="var2",values_to = "value") |>
arrange()
as.data.frame(mat) |>
tibble::rownames_to_column(var="var1") |>
tidyr::pivot_longer(!var1,names_to="var2",values_to = "value") |>
arrange()
as.data.frame(mat) |>
tibble::rownames_to_column(var="var1") |>
tidyr::pivot_longer(!var1,names_to="var2",values_to = "value") |>
arrange(var2)
colnames(mat)
rownames(mat)
# colnm <- as.factor(colnames(mat))
# rownm <- rownames(mat)
var_order <- if(order==2) c(name[2],name[1],name[3])
colnm <- as.factor(colnames(mat))
colnm
colnames(mat)
colnm <- as.factor(colnames(mat))
colnm
colnm <- factor(colnames(mat))
colnm
colnm <- factor(colnames(mat), ordered=TRUE)
colnm
colnm <- factor(colnames(mat), levels=colnames(mat))
colnm
as.data.frame(mat) |>
tibble::rownames_to_column(var="var1") |>
tidyr::pivot_longer(!var1,names_to="var2",values_to = "value",names_transform=as.factor) |>
arrange(var2)
as.data.frame(mat) |>
tibble::rownames_to_column(var="var1") |>
tidyr::pivot_longer(!var1,names_to="var2",values_to = "value", names_transform=as.factor)
mat2Longtb <- function(mat, name= c("var1","var2","value"), order=2){
var_order <- if(order==2) c(name[2],name[1],name[3])
as.data.frame(mat) |>
tibble::rownames_to_column(var="var1") |>
tidyr::pivot_longer(!var1,names_to="var2",values_to = "value", names_transform=as.factor) |>
rlang::set_names(name)
}
mat2Longtb <- function(mat, name= c("var1","var2","value")){
as.data.frame(mat) |>
tibble::rownames_to_column(var="var1") |>
tidyr::pivot_longer(!var1,names_to="var2",values_to = "value", names_transform=as.factor) |>
rlang::set_names(name)
}
bayesVAR:::
mat2Longtb(Coef_mat)
bayesVAR:::mat2Longtb(Coef_mat,c("explantory","response","values"))
mat2Longtb(Coef_mat,c("explantory","response","values"))
mat2Longtb(Sigma,c("explantory","response","values"))
sqrt(mat2Longtb(Sigma,c("explantory","response","values")))
mat2Longtb(sqrt(Sigma),c("explantory","response","values"))
sqrt(diag(Sigma))
temp <- mat2Longtb(Coef_mat,c("explantory","response","values"))
mat2Longtb(sqrt(diag(Sigma)),c("explantory","response","values"))
sqrt(diag(Sigma))
as_tibble(sqrt(diag(Sigma))
as_tibble(sqrt(diag(Sigma)))
as_tibble(sqrt(diag(Sigma)))
as_tibble(sqrt(diag(Sigma)))
as.data.frame(sqrt(diag(Sigma)))
as.data.frame(`S.E`=sqrt(diag(Sigma)))
data.frame(`S.E`=sqrt(diag(Sigma)))
rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma)),var="response")
rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response")
left_join(temp,rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response"),by="")
left_join(temp,rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response"),by="response")
mat2Longtb(Coef_mat,c("explantory","response","value")) |>
dplyr::left_join(temp,rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response"),by="response") |>
dplyr::mutate(Z=value/S.E,
`p.value`=pnorm(Z))
temp <- mat2Longtb(Coef_mat,c("explantory","response","value")) |>
dplyr::left_join(temp,rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response"),by="response") |>
dplyr::mutate(Z=value/`S.E,`
`p.value`=pnorm(Z))
temp <- mat2Longtb(Coef_mat,c("explantory","response","value")) |>
dplyr::left_join(temp,rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response"),by="response") |>
dplyr::mutate(Z=value/`S.E`,
`p.value`=pnorm(Z))
mat2Longtb(Coef_mat,c("explantory","response","value")) |>
dplyr::left_join(temp,rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response"),by="response")
mat2Longtb(Coef_mat,c("explantory","response","value")) |>
dplyr::left_join(temp,rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response"),by="response")
(data.frame(`S.E`=sqrt(diag(Sigma)))
data.frame(`S.E`=sqrt(diag(Sigma)))
rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))
rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma)))
rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma)))
rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response")
rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response")
Coef_vec
explanatory=colnames(Coef_mat)
colnames(Coef_mat)
rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response") %>% expand(explanatory=rownames(Coef_mat))
rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response") %>% expand(response,explanatory=rownames(Coef_mat))
rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response") %>% expand(response,explanatory=rownames(Coef_mat),value)
rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response") %>% expand(response,explanatory=rownames(Coef_mat),`S.E`)
mat2Longtb(Coef_mat,c("explantory","response","value")) |>
dplyr::left_join(tb2,by="response") |>
dplyr::mutate(Z=value/`S.E`,
`p.value`=pnorm(Z))
tb2 <- rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response") |>
expand(response,explanatory=rownames(Coef_mat),`S.E`)
mat2Longtb(Coef_mat,c("explantory","response","value")) |>
dplyr::left_join(tb2,by="response") |>
dplyr::mutate(Z=value/`S.E`,
`p.value`=pnorm(Z))
tb2
dplyr::left_join(tb2,by=c("response","explanatory") |>
mat2Longtb(Coef_mat,c("explantory","response","value")) |>
dplyr::left_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(Z=value/`S.E`,
`p.value`=pnorm(Z))
mat2Longtb(Coef_mat,c("explantory","response","value")) |>
dplyr::left_join(tb2,by=c("response","explanatory"))
mat2Longtb(Coef_mat,c("explantory","response","value")) |>
dplyr::left_join(tb2,by=c("response","explanatory"))
mat2Longtb(Coef_mat,c("explantory","response","value"))
mat2Longtb(Coef_mat,c("explanatory","response","value")) |>
dplyr::left_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(Z=value/`S.E`,
`p.value`=pnorm(Z))
mat2Longtb(Coef_mat,c("explanatory","response","coef")) |>
dplyr::left_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(Z=coef/`S.E`,
`p.value`=pnorm(Z))
mat2Longtb(Coef_mat,c("explanatory","response","coef.value")) |>
dplyr::left_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(Z=`coef.value`/`S.E`,
`p.value`=pnorm(Z)) |>
arrange(response,explanatory,)
mat2Longtb(Coef_mat,c("explanatory","response","coef.value")) |>
dplyr::left_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(`Z.value`=`coef.value`/`S.E`,
`p.value`=pnorm(`Z.value`)) |>
arrange(response,explanatory,`coef.values`,`S.E`,`Z.value`,`p.value`)
mat2Longtb(Coef_mat,c("explanatory","response","coef.value")) |>
dplyr::left_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(`Z.value`=`coef.value`/`S.E`,
`p.value`=pnorm(`Z.value`)) |>
arrange(response,explanatory,`coef.value`,`S.E`,`Z.value`,`p.value`)
mat2Longtb(Coef_mat,c("explanatory","response","coef.value")) |>
dplyr::left_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(`Z.value`=`coef.value`/`S.E`,
`p.value`=pnorm(`Z.value`)) |>
select(response,explanatory,`coef.value`,`S.E`,`Z.value`,`p.value`)
#' @describeIn VAR_OLS
#' @param object a OLS VAR model
#' @export
summary.OLS <- function(object){
Coef_mat <- coef(object)
Sigma <- object$parameters$Sigma
tb2 <- rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response") |>
expand(response,explanatory=rownames(Coef_mat),`S.E`)
mat2Longtb(Coef_mat,c("explanatory","response","coef.value")) |>
dplyr::left_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(`Z.value`=`coef.value`/`S.E`,
`p.value`=pnorm(`Z.value`)) |>
select(response,explanatory,`coef.value`,`S.E`,`Z.value`,`p.value`)
}
summary.OLS(mod1)
summary.OLS <- function(object){
Coef_mat <- coef(object)
Sigma <- object$parameters$Sigma
tb2 <- rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response") |>
expand(response,explanatory=rownames(Coef_mat),`S.E`)
mat2Longtb(Coef_mat,c("explanatory","response","coef.value")) |>
dplyr::left_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(`Z.value`=`coef.value`/`S.E`,
`p.value`=pnorm(`Z.value`)) |>
select(response,explanatory,`coef.value`,`S.E`,`Z.value`,`p.value`) |>
print.data.frame()
}
summary.OLS(mod1)
summary.OLS <- function(object){
Coef_mat <- coef(object)
Sigma <- object$parameters$Sigma
tb2 <- rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response") |>
expand(response,explanatory=rownames(Coef_mat),`S.E`)
mat2Longtb(Coef_mat,c("explanatory","response","coef.value")) |>
dplyr::left_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(`Z.value`=`coef.value`/`S.E`,
`p.value`=1-pnorm(`Z.value`)) |>
select(response,explanatory,`coef.value`,`S.E`,`Z.value`,`p.value`) |>
print.data.frame()
}
mat2Longtb(Coef_mat,c("explanatory","response","coef.value"))
mat2Longtb(Coef_mat,c("explanatory","response","coef.value"))
ans <- mat2Longtb(Coef_mat,c("explanatory","response","coef.value"))
class(ans)
Sigma
data.frame(response=rowname(Sigma),`S.E`=sqrt(diag(Sigma)))
tb2 <-data.frame(response=rownames(Sigma),`S.E`=sqrt(diag(Sigma))) |>
expand(response,explanatory=rownames(Coef_mat),`S.E`)
data.frame(response=rownames(Sigma),`S.E`=sqrt(diag(Sigma))) |>
expand(response,explanatory=rownames(Coef_mat),`S.E`)
mat2Longtb(Coef_mat,c("explanatory","response","coef.value"))
mat2Longtb(Coef_mat,c("explanatory","response","coef.value"))[c("response","explanatory",`coef.value`)]
ans <- mat2Longtb(Coef_mat,c("explanatory","response","coef.value"))[c("response","explanatory","coef.value")] |>
dplyr::left_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(`Z.value`=`coef.value`/`S.E`,
`p.value`=1-pnorm(`Z.value`))
ans
tb2 <-data.frame(response=factor(rownames(Sigma),levels=rownames(Sigma)),
`S.E`=sqrt(diag(Sigma))) |>
expand(response,explanatory=rownames(Coef_mat),`S.E`)
tb2
ans <- mat2Longtb(Coef_mat,c("explanatory","response","coef.value"))[c("response","explanatory","coef.value")] |>
dplyr::left_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(`Z.value`=`coef.value`/`S.E`,
`p.value`=1-pnorm(`Z.value`))
ans
ans <- mat2Longtb(Coef_mat,c("explanatory","response","coef.value"))[c("response","explanatory","coef.value")] |>
dplyr::right_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(`Z.value`=`coef.value`/`S.E`,
`p.value`=1-pnorm(`Z.value`))
ans
tb2 <-data.frame(response=factor(rownames(Sigma),levels=rownames(Sigma)),
`S.E`=sqrt(diag(Sigma))) |>
expand(response,explanatory=rownames(Coef_mat),`S.E`)
ans <- mat2Longtb(Coef_mat,c("explanatory","response","coef.value"))[c("response","explanatory","coef.value")] |>
dplyr::right_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(`Z.value`=`coef.value`/`S.E`,
`p.value`=1-pnorm(`Z.value`))
ans
tb2 <-data.frame(response=factor(rownames(Sigma),levels=rownames(Sigma)),
`S.E`=sqrt(diag(Sigma))) |>
expand(response,explanatory=rownames(Coef_mat),`S.E`)
tb
tb2
#' @describeIn VAR_OLS
#' @param object a OLS VAR model
#' @export
summary.OLS <- function(object){
Coef_mat <- coef(object)
Sigma <- object$parameters$Sigma
tb2 <-data.frame(response=factor(rownames(Sigma),levels=rownames(Sigma)),
`S.E`=sqrt(diag(Sigma))) |>
expand(response,explanatory=rownames(Coef_mat),`S.E`)
ans <- mat2Longtb(Coef_mat,c("explanatory","response","coef.value"))[c("response","explanatory","coef.value")] |>
dplyr::right_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(`Z.value`=`coef.value`/`S.E`,
`p.value`=1-pnorm(`Z.value`))
print.data.frame(ans)
}
summary.OLS(mod1)
library(bayesVAR)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
mod1 <- VAR_OLS(data=data,p=3)
class(mod1)
str(mod1)
summary.OLS(mod1)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
library(bayesVAR)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
mod1 <- VAR_OLS(data=data,p=3)
class(mod1)
str(mod1)
summary.OLS(mod1)
devtools::load_all(".")
devtools::load_all(".")
rm(list=ls())
devtools::load_all(".")
# obtain VAR coefficients ans Covariance by OLS
mod1 <- VAR_OLS(data=data,p=3)
class(mod1)
str(mod1)
summary.OLS(mod1)
Coef_mat <- coef(mod1)
Sigma <- mod1$parameters$Sigma
tb2 <- rownames_to_column(data.frame(`S.E`=sqrt(diag(Sigma))),var="response") |>
expand(response,explanatory=rownames(Coef_mat),`S.E`)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
mod1 <- VAR_OLS(data=data,p=3)
class(mod1)
str(mod1)
summary.OLS(mod1)
library(bayesVAR)
devtools::load_all(".")
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
mod1 <- VAR_OLS(data=data,p=3)
class(mod1)
str(mod1)
summary(mod1)
devtools::load_all(".")
# obtain VAR coefficients ans Covariance by OLS
mod1 <- VAR_OLS(data=data,p=3)
class(mod1)
summary(mod1)
library(bayesVAR)
# obtain VAR coefficients ans Covariance by OLS
mod1 <- VAR_OLS(data=data,p=3)
class(mod1)
summary(mod1)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
mod1 <- VAR_OLS(data=data,p=3)
class(mod1)
summary(mod1)
mod1
class(mod1)
?summart.OLS
?summary.OLS
library(bayesVAR)
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
mod1 <- VAR_OLS(data=data,p=3)
class(mod1)
summary(mod1)
summary.OLS(mod1)
library(bayesVAR)
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
mod1 <- VAR_OLS(data=data,p=3)
class(mod1)
summary.OLS(mod1)
#' @describeIn VAR_OLS summarize inference by OLS fitting
#' @param object a OLS VAR model
#' @export
summary.OLS <- function(object){
Coef_mat <- coef(object)
Sigma <- object$parameters$Sigma
tb2 <-data.frame(response=factor(rownames(Sigma),levels=rownames(Sigma)),
`S.E`=sqrt(diag(Sigma))) |>
expand(response,explanatory=rownames(Coef_mat),`S.E`)
ans <- mat2Longtb(Coef_mat,c("explanatory","response","coef.value"))[c("response","explanatory","coef.value")] |>
dplyr::right_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(`Z.value`=`coef.value`/`S.E`,
`p.value`=format(1-pnorm(`Z.value`),digits=5,justify="right"))
print.data.frame(ans)
}
summary.OLS(mod1)
summary.OLS <- function(object){
Coef_mat <- coef(object)
Sigma <- object$parameters$Sigma
tb2 <-data.frame(response=factor(rownames(Sigma),levels=rownames(Sigma)),
`S.E`=sqrt(diag(Sigma))) |>
expand(response,explanatory=rownames(Coef_mat),`S.E`)
ans <- bayesVAR:::mat2Longtb(Coef_mat,c("explanatory","response","coef.value"))[c("response","explanatory","coef.value")] |>
dplyr::right_join(tb2,by=c("response","explanatory")) |>
dplyr::mutate(`Z.value`=`coef.value`/`S.E`,
`p.value`=format(1-pnorm(`Z.value`),digits=5,justify="right"))
print.data.frame(ans)
}
summary.OLS(mod1)
# obtain VAR coefficients ans Covariance by OLS
object <- VAR_OLS(data=data,p=3)
Coef_mat <- coef(object)
Coef_mat
coef(object)
object
coef(object)
devtools::load_all(".")
as.data.frame(mat) |>
tibble::rownames_to_column(var="var1") |>
tidyr::pivot_longer(-var1,names_to="var2",values_to = "value") |>
rlang::set_names(name)
rm(list = c("summary.OLS"))
devtools::load_all(".")
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object <- VAR_OLS(data=data,p=3)
class(mod1)
summary.OLS(mod1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(mod1, newdata=newdata)
plot(pred1)
pred1
pred1
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(mod1, newdata=newdata)
plot(pred1)
pred1
IR <- impulse_response(mod1,variable="INT_KTB3Y", period=6, p=3, type="structural",ncol.fig = 1)
devtools::load_all(".")
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(mod1, newdata=newdata)
plot(pred1)
pred1
IR <- impulse_response(mod1,variable="INT_KTB3Y", period=6, p=3, type="structural",ncol.fig = 1)
# Bayesian VAR
mod2 <- VAR_bayes(data,p=2, N=120, warmup = 50, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(mod2)
plot(mod2, ncol.fig = 2)
# unconditional forecasting
pred2 <- predict(mod2, newdata=newdata)
plot(pred2,ncol.fig=2)
pred2$interval %>% arrange(var,time)
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3),
INT_KTB3Y = c(1.2,1.3,1.6,1.7)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- predict(mod2, newdata=newdata, condition=condition)
plot(pred3,ncol.fig=2)
pred2$fitted
plot(pred1)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
plot.xts(pred1)
