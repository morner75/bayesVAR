rm(list=ls())
data(macrodata)
str(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
mod1 <- VAR_OLS(data,p=3)
class(mod1)
plot(mod1)
detach("package:base", unload = TRUE)
detach("package:bayesVAR", unload = TRUE)
library(bayesVAR)
predict.lm
?terms
library(bayesVAR)
?impulse_response
library(bayesVAR)
impulse_response
library(bayesVAR)
?impulse_response
impuls_response.OLS
impulse_response.OLS
?impulse_response.OLS
?impulse_response
library(bayesVAR)
?impulse_response
install.packages(c("partitions", "pillar", "pkgload", "rlang", "Runuran", "rvest", "tsibble", "usethis", "viridis", "xfun"))
suppressMessages(library(bayesVAR))
data(macrodata)
class(macrodata)
tail(macrodata)
data <- macrodata[,c("RGDP_Q_G","USDKRW_G","INT_CALL")]
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
data
# Bayesian VAR
object <- VAR_bayes(data,p=4, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
library(bayesVAR)
# Bayesian VAR
object <- VAR_bayes(data,p=4, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
data
VAR_bayes(data,p=4, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
devtools::load_all(".")
VAR_bayes(data,p=4, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
library(bayesVAR)
VAR_bayes(data,p=4, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
library(bayesVAR)
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
plot(object1)
class(object1)
summary(object1)
plot(object1)
devtools::load_all(".")
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
plot(object1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
# Bayesian VAR
object <- VAR_bayes(data,p=4, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(object)
plot.bayesVAR(object, ncol.fig = 2)
VAR_bayes(data,p=4, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
# Bayesian VAR
object <- VAR_bayes(data,p=4, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(object)
plot.bayesVAR(object, ncol.fig = 2)
devtools::load_all(".")
plot.bayesVAR(object, ncol.fig = 2)
# subset
data <- macrodata[,c("RGDP_Q_G","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot(data,multi.panel=TRUE,yaxis.same = FALSE)
devtools::load_all(".")
plot(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
plot(data,multi.panel=TRUE,yaxis.same = FALSE)
# subset
data <- macrodata[,c("RGDP_Q_G","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot(data,multi.panel=TRUE,yaxis.same = FALSE)
plot(data,multi.panel=TRUE,yaxis.same = FALSE)
devtools::load_all(".")
plot(data,multi.panel=TRUE,yaxis.same = FALSE)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
plot(object1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(object1, newdata=newdata)
plot.xts(pred1)
pred1
class(pred1)
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
# initial values from OLS
Init <- VAR_OLS(data, p, exos)
exos="INT_CALL"
p=2
# initial values from OLS
Init <- VAR_OLS(data, p, exos)
Y <- Init$model_var$Y
X <- Init$model_var$X
beta <- as.vector(Init$parameters$Coef_mat)
Sigma <- Init$parameters$Sigma
k <- ncol(Y) ; m <- length(exos)+1
rho <- minnesota_par$rho
lambdas <- minnesota_par$lambdas
minnesota_par=list(rho=1,lambdas=c(0.1, 0.5, 2, 100))
rho <- minnesota_par$rho
lambdas <- minnesota_par$lambdas
N=1500
warmup = 500
par.samples <- list(Coef_mat=vector("list", length=N), Sigma=vector("list", length=N))
i=1
Coef_mat <- NW_beta(Sigma, X, Y, rho=rho, lambdas=lambdas) |> Coef_vec2mat(k,p,m)
Sigma
X
Y
rho=rho
NW_beta(Sigma, X, Y, rho=rho, lambdas=lambdas)
ncol(Y)
p <- ncol(X)%/%ncol(Y)
ncol(X)%/%ncol(Y)
ncol(X)%%ncol(Y)
library(bayesVAR)
devtools::load_all(".")
devtools::load_all(".")
library(bayesVAR)
devtools::load_all(".")
devtools::load_all(".")
# Bayesian VAR
object <- VAR_bayes(data,p=4, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(object)
plot.bayesVAR(object, ncol.fig = 2)
library(bayesVAR)
devtools::load_all(".")
# conditional forecasting
condition <- xts(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3), order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
View(condition)
condition
# conditional forecasting
condition <- xts(data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
# unconditional forecasting
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred2 <- bayesVAR:::predict.bayesVAR(object, newdata=newdata)
pred2 <- bayesVAR:::predict.bayesVAR(object, newdata=newdata)
bayesVAR:::plot.bayesVAR(pred2,ncol.fig=2)
# conditional forecasting
condition <- xts(data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- bayesVAR:::predict.bayesVAR(object, newdata=newdata, condition=condition)
pred3 <- bayesVAR:::predict.bayesVAR(object, newdata=newdata, condition=condition)
Y <- object$model_var$Y
X <- object$model_var$X
k <- ncol(Y)
p <- (ncol(X)-ncol(newdata)-1)/ncol(Y)
(ncol(X)
ncol(X)
ncol(X)
ncol(newdata)
(ncol(X)-ncol(newdata)-1)
k <- ncol(Y)
p <- (ncol(X)-ncol(newdata)-1)/ncol(Y)
par <- object$posterior$parameter
lapply(seq_along(par[[1]]), function(i)
predict_cond(Y, newdata, condition, Coef_mat=par$Coef_mat[[i]], Sigma=par$Sigma[[i]]))
period <- nrow(newdata)
p <- (nrow(Coef_mat) - ncol(newdata)-1)/ncol(Coef_mat)
cond.var <- colnames(condition)
period <- nrow(newdata)
p <- (nrow(Coef_mat) - ncol(newdata)-1)/ncol(Coef_mat)
Coef_mat=par$Coef_mat[[i]]
p <- (nrow(Coef_mat) - ncol(newdata)-1)/ncol(Coef_mat)
cond.var <- colnames(condition)
pred_wo_shock <- predict_simple(Y, newdata, Coef_mat) |>  tail(n=period)
r <-  vapply(seq_len(period), function(.x)
coredata(condition - pred_wo_shock[,cond.var])[.x,],FUN.VALUE = numeric(2)) |>
as.vector()
condition
pred_wo_shock[,cond.var]
condition - pred_wo_shock[,cond.var]
coredata(condition - pred_wo_shock[,cond.var])
seq_len(period)
coredata(condition - pred_wo_shock[,cond.var])[.x,],FUN.VALUE = numeric(ncol(condition)) |>
as.vector()
r <-  vapply(seq_len(period), function(.x)
coredata(condition - pred_wo_shock[,cond.var])[.x,],FUN.VALUE = numeric(ncol(condition))) |>
as.vector()
devtools::load_all(".")
# conditional forecasting
condition <- xts(data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- bayesVAR:::predict.bayesVAR(object, newdata=newdata, condition=condition)
library(bayesVAR)
r <-  vapply(seq_len(period), function(.x)
coredata(condition - pred_wo_shock[,cond.var])[.x,],FUN.VALUE = numeric(ncol(condition))) |>
as.vector()
IRmat <- IR_mat_generator(names=colnames(Y), period=(period-1), p=(nrow(Coef_mat)-ncol(newdata)-1)/ncol(Y), Coef_mat=Coef_mat,Sigma=Sigma,type="chol")
colnames(Coef_mat) <- names
names=colnames(Y)
period=(period-1)
colnames(Coef_mat) <- names
k <- ncol(Coef_mat)
res <- list()
for(i in seq_len(k)){
Ynew <- matrix(0,ncol=k,nrow=p)
Ynew[p,i] <- 1
for(j in seq_len(period)){
Y_update <- matrix(t(tail(Ynew,n=p)[rev(seq_len(p)),]),nrow=1,byrow=TRUE) %*% Coef_mat[1:(k*p),]
Ynew <- rbind(Ynew,Y_update)
}
res <- rbind(res, cbind( as.data.frame(Ynew[p:(p+period),]), response=colnames(Coef_mat)[i],term=0:period) )
}
res1 <- purrr::map(seq_len(period+1), ~(dplyr::filter(res,term==.x-1)) |>
dplyr::select(-term) |>
tibble::column_to_rownames(var = "response") |>
as.data.frame() |> t())
res2 <- lapply(res1, function(.x) .x%*%t(chol(Sigma)))
res3 <-  lapply(res2, function(.x) .x%*%diag(1/sqrt(diag(Sigma))))
period <- nrow(newdata)
p <- (nrow(Coef_mat) - ncol(newdata)-1)/ncol(Coef_mat)
cond.var <- colnames(condition)
pred_wo_shock <- predict_simple(Y, newdata, Coef_mat) |>  tail(n=period)
predict_simple <- function(Y, newdata, Coef_mat){
if(!is.xts(newdata)) stop("external variables must be xts class")
period <- nrow(newdata)
p <- (nrow(Coef_mat)-ncol(newdata)-1)/ncol(Y)
Ynew <- tail(Y,n=p)
x <- cbind(1,newdata)
for(i in seq_len(period)){
Y_update <- c(as.vector(t(zoo::rev.zoo(tail(Ynew,n=p)))),x[i,]) %*% Coef_mat |>
xts(order.by=index(newdata[i,]))
Ynew <- rbind(Ynew,Y_update)
}
Ynew
}
period <- nrow(newdata)
p <- (nrow(Coef_mat) - ncol(newdata)-1)/ncol(Coef_mat)
cond.var <- colnames(condition)
pred_wo_shock <- predict_simple(Y, newdata, Coef_mat) |>  tail(n=period)
r <-  vapply(seq_len(period), function(.x)
coredata(condition - pred_wo_shock[,cond.var])[.x,],FUN.VALUE = numeric(ncol(condition))) |>
as.vector()
IRmat <- IR_mat_generator(names=colnames(Y), period=(period-1), p=(nrow(Coef_mat)-ncol(newdata)-1)/ncol(Y), Coef_mat=Coef_mat,Sigma=Sigma,type="chol")
# Impulse Response matrix generator
IR_mat_generator <- function(names, period, p, Coef_mat, Sigma, type=c("origin","chol","triangle")){
colnames(Coef_mat) <- names
k <- ncol(Coef_mat)
res <- list()
for(i in seq_len(k)){
Ynew <- matrix(0,ncol=k,nrow=p)
Ynew[p,i] <- 1
for(j in seq_len(period)){
Y_update <- matrix(t(tail(Ynew,n=p)[rev(seq_len(p)),]),nrow=1,byrow=TRUE) %*% Coef_mat[1:(k*p),]
Ynew <- rbind(Ynew,Y_update)
}
res <- rbind(res, cbind( as.data.frame(Ynew[p:(p+period),]), response=colnames(Coef_mat)[i],term=0:period) )
}
res1 <- purrr::map(seq_len(period+1), ~(dplyr::filter(res,term==.x-1)) |>
dplyr::select(-term) |>
tibble::column_to_rownames(var = "response") |>
as.data.frame() |> t())
if(type=="origin") return(res1)
res2 <- lapply(res1, function(.x) .x%*%t(chol(Sigma)))
if(type=="chol") return(res2)
res3 <-  lapply(res2, function(.x) .x%*%diag(1/sqrt(diag(Sigma))))
if(type=="triangle") return(res3)
}
IRmat <- IR_mat_generator(names=colnames(Y), period=(period-1), p=(nrow(Coef_mat)-ncol(newdata)-1)/ncol(Y), Coef_mat=Coef_mat,Sigma=Sigma,type="chol")
R <- Reduce(`+`,lapply(seq_along(IRmat), function(i) diag2(period-i+1, period)%x%IRmat[[i]][cond.var,]))
diag2 <- function(k,n){
mat <- array(0, dim=c(n,n))
mat[(n-k+1):n,1:k] <- diag(k)
mat
}
R <- Reduce(`+`,lapply(seq_along(IRmat), function(i) diag2(period-i+1, period)%x%IRmat[[i]][cond.var,]))
V1 <- svd(R,nv=dim(R)[2])$v[,1:dim(R)[1]]
R
V1 <- svd(R,nv=dim(R)[2])$v[,1:dim(R)[1]]
svd(R,nv=dim(R)[2])
dim(R)[1]
dim(R)
R
R
r
IRmat
lapply(seq_along(IRmat), function(i) diag2(period-i+1, period)%x%IRmat[[i]][cond.var,])
IRmat
R
View(condition)
View(newdata)
r
IRmat
R <- Reduce(`+`,lapply(seq_along(IRmat), function(i) diag2(period-i+1, period)%x%IRmat[[i]][cond.var,]))
R
diag2(period-i+1, period)
diag2(4,4)
IRmat
IRmat[[i]][cond.var,]
diag2(period-i+1, period)%x%IRmat[[i]][cond.var,]
IRmat[[i]][cond.var,]
diag2(period-i+1, period)%x%(IRmat[[i]][cond.var,])
diag2(period-i+1, period)
diag2(period-i+1, period)%x%IRmat[[i]][cond.var,,drop=F]
devtools::load_all(".")
library(bayesVAR)
devtools::load_all(".")
devtools::load_all(".")
library(bayesVAR)
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
plot(object1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(object1, newdata=newdata)
plot.xts(pred1)
pred1
class(pred1)
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(object)
plot.bayesVAR(object, ncol.fig = 2)
# unconditional forecasting
pred2 <- predict(object, newdata=newdata)
bayesVAR:::plot.bayesVAR(pred2,ncol.fig=2)
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3),
INT_KTB3Y = c(1.2,1.3,1.6,1.7)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- predict(object, newdata=newdata, condition=condition)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
plot(object1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(object1, newdata=newdata)
plot.xts(pred1)
pred1
class(pred1)
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(object)
plot.bayesVAR(object, ncol.fig = 2)
# unconditional forecasting
pred2 <- predict(object, newdata=newdata)
bayesVAR:::plot.bayesVAR(pred2,ncol.fig=2)
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3),
pred3 <- predict(object, newdata=newdata, condition=condition)
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- predict(object, newdata=newdata, condition=condition)
rm(list=ls)
rm(list=ls())
library(bayesVAR)
rm(list=ls())
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
plot(object1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(object1, newdata=newdata)
plot.xts(pred1)
pred1
class(pred1)
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(object)
plot.bayesVAR(object, ncol.fig = 2)
# unconditional forecasting
pred2 <- predict(object, newdata=newdata)
bayesVAR:::plot.bayesVAR(pred2,ncol.fig=2)
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- predict(object, newdata=newdata, condition=condition)
period <- nrow(newdata)
p <- (nrow(Coef_mat) - ncol(newdata)-1)/ncol(Coef_mat)
Coef_mat=par$Coef_mat[[i]]
Y <- object$model_var$Y
X <- object$model_var$X
k <- ncol(Y)
p <- (ncol(X)-ncol(newdata)-1)/ncol(Y)
par <- object$posterior$parameter
Coef_mat=par$Coef_mat[[i]]
Sigma=par$Sigma[[i]]
i=1
Coef_mat=par$Coef_mat[[i]]
Sigma=par$Sigma[[i]]
period <- nrow(newdata)
p <- (nrow(Coef_mat) - ncol(newdata)-1)/ncol(Coef_mat)
cond.var <- colnames(condition)
pred_wo_shock <- predict_simple(Y, newdata, Coef_mat) |>  tail(n=period)
r <-  vapply(seq_len(period), function(.x)
coredata(condition - pred_wo_shock[,cond.var])[.x,],FUN.VALUE = numeric(ncol(condition))) |>
as.vector()
IRmat <- IR_mat_generator(names=colnames(Y), period=(period-1), p=(nrow(Coef_mat)-ncol(newdata)-1)/ncol(Y), Coef_mat=Coef_mat,Sigma=Sigma,type="chol")
R <- Reduce(`+`,lapply(seq_along(IRmat), function(i) diag2(period-i+1, period)%x%IRmat[[i]][cond.var,,drop=F]))
IRmat
IR_mat_generator(names=colnames(Y)
IR_mat_generator(names=colnames(Y), period=(period-1), p=(nrow(Coef_mat)-ncol(newdata)-1)/ncol(Y), Coef_mat=Coef_mat,Sigma=Sigma,type="chol")
p <- (nrow(Coef_mat) - ncol(newdata)-1)/ncol(Coef_mat)
Coef_mat
Y <- object$model_var$Y
X <- object$model_var$X
X <- object$model_var$X
library(bayesVAR)
rm(list=ls())
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_CALL")]
# subset
data <- macrodata[,c("RGDP_Q_G","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
plot(object1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(object1, newdata=newdata)
plot.xts(pred1)
pred1
class(pred1)
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(object)
plot.bayesVAR(object, ncol.fig = 2)
# unconditional forecasting
pred2 <- predict(object, newdata=newdata)
bayesVAR:::plot.bayesVAR(pred2,ncol.fig=2)
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- predict(object, newdata=newdata, condition=condition)
plot(pred3,ncol.fig=2)
pred2$fitted
