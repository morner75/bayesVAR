object <- VAR_OLS(data=data,p=3)
class(mod1)
summary.OLS(mod1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(mod1, newdata=newdata)
plot(pred1)
pred1
pred1
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(mod1, newdata=newdata)
plot(pred1)
pred1
IR <- impulse_response(mod1,variable="INT_KTB3Y", period=6, p=3, type="structural",ncol.fig = 1)
devtools::load_all(".")
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(mod1, newdata=newdata)
plot(pred1)
pred1
IR <- impulse_response(mod1,variable="INT_KTB3Y", period=6, p=3, type="structural",ncol.fig = 1)
# Bayesian VAR
mod2 <- VAR_bayes(data,p=2, N=120, warmup = 50, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(mod2)
plot(mod2, ncol.fig = 2)
# unconditional forecasting
pred2 <- predict(mod2, newdata=newdata)
plot(pred2,ncol.fig=2)
pred2$interval %>% arrange(var,time)
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3),
INT_KTB3Y = c(1.2,1.3,1.6,1.7)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- predict(mod2, newdata=newdata, condition=condition)
plot(pred3,ncol.fig=2)
pred2$fitted
plot(pred1)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
plot.xts(pred1)
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
devtools::load_all(".")
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary.OLS(object1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(object1, newdata=newdata)
plot.xts(pred1)
pred1
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=120, warmup = 50, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(object)
plot.bayesVAR(object, ncol.fig = 2)
# unconditional forecasting
pred2 <- predict(object, newdata=newdata)
bayesVAR:::plot.bayesVAR(pred2,ncol.fig=2)
# unconditional forecasting
pred2 <- predict(object, newdata=newdata)
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=120, warmup = 50, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
source("D:/users/morne/Dropbox/bayesVAR 2/temp/vignette.R", echo=TRUE)
class(object)
plot.bayesVAR(object, ncol.fig = 2)
# unconditional forecasting
pred2 <- predict(object, newdata=newdata)
Y <- object$model_var$Y
X <- object$model_var$X
k <- ncol(Y)
X <- object$model_var$X
k <- ncol(Y)
p <- (ncol(X)-ncol(newdata)-1)/ncol(Y)
par <- object$posterior$parameter
predictive <- lapply(seq_along(par[[1]]), function(i)
predict_draw(Y, newdata=newdata, Coef_mat=par$Coef_mat[[i]], Sigma=par$Sigma[[i]]))
predictive
fitted <- Reduce(`+`, predictive)/length(par$Coef_mat)
fitted
length(par$Coef_mat)
interval <- array(unlist(predictive),dim=c(nrow(predictive[[1]]),ncol(predictive[[1]]),length(par$Coef_mat))) |>
apply(c(1,2),quantile,probs=c(0.025,0.5,0.975)) |> purrr::array_branch(margin=1)
interval
condition
interval <- lapply(interval, function(lst) xts(lst, order.by=index(newdata)) |> setNames(colnames(Y))) |>
setNames(c("lower","median","upper"))
index(newdata))
index(newdata)
interval
lapply(interval, function(lst) xts(lst, order.by=index(newdata))
lapply(interval, function(lst) xts(lst, order.by=index(newdata)) |> setNames(colnames(Y))) |>
setNames(c("lower","median","upper"))
lapply(interval, function(lst) xts(lst, order.by=index(newdata)) |> setNames(colnames(Y)))
interval
lapply(interval, function(lst) xts(lst, order.by=index(newdata)))
predictive
fitted
interval <- lapply(interval, function(lst) xts(lst, order.by=index(fitted))) |> setNames(colnames(Y))) |>
setNames(c("lower","median","upper"))
interval <- array(unlist(predictive),dim=c(nrow(predictive[[1]]),ncol(predictive[[1]]),length(par$Coef_mat))) |>
apply(c(1,2),quantile,probs=c(0.025,0.5,0.975)) |> purrr::array_branch(margin=1)
interval <- lapply(interval, function(lst) xts(lst, order.by=index(fitted))) |> setNames(colnames(Y))) |>
setNames(c("lower","median","upper"))
lapply(interval, function(lst) xts(lst, order.by=index(fitted)))
interval <- lapply(interval, function(lst) xts(lst, order.by=index(fitted)) |> setNames(colnames(Y))) |>
setNames(c("lower","median","upper"))
Fred <- list(fitted=fitted,
posterior=predictive,
interval=interval)
devtools::load_all(".")
# unconditional forecasting
pred2 <- predict(object, newdata=newdata)
bayesVAR:::plot.bayesVAR(pred2,ncol.fig=2)
pred2$interval %>% arrange(var,time)
pred2$interval
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3),
INT_KTB3Y = c(1.2,1.3,1.6,1.7)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- predict(mod2, newdata=newdata, condition=condition)
pred3 <- predict(object, newdata=newdata, condition=condition)
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3),
INT_KTB3Y = c(1.2,1.3,1.6,1.7)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- predict(object, newdata=newdata, condition=condition)
newdata=newdata
newdata
condition
pred3 <- predict(object, newdata=newdata, condition=condition)
period <- nrow(newdata)
p <- (nrow(Coef_mat) - ncol(newdata)-1)/ncol(Coef_mat)
cond.var <- colnames(condition)
pred_wo_shock <- predict_simple(Y, newdata, Coef_mat) |>  tail(n=period)
pred_wo_shock <- predict_simple(Y, newdata, Coef_mat) |>  tail(n=period)
object$posterior$parameter$Coef_mat
Coef_mat <- object$posterior$parameter$Coef_mat[[1]]
pred_wo_shock <- predict_simple(Y, newdata, Coef_mat) |>  tail(n=period)
pred_wo_shock
r <-  vapply(seq_len(period), function(.x)
coredata(condition - pred_wo_shock[,cond.var])[.x,],FUN.VALUE = numeric(2)) |>
as.vector()
r
Sigma <- object$posterior$parameter$Sigma[[1]]
IRmat <- IR_mat_generator(period=(period-1), p=(nrow(Coef_mat)-ncol(newdata)-1)/ncol(Y), Coef_mat=Coef_mat,Sigma=Sigma,type="chol")
IRmat
IRmat
IRmat <- IR_mat_generator(period=(period-1), p=(nrow(Coef_mat)-ncol(newdata)-1)/ncol(Y), Coef_mat=Coef_mat,Sigma=Sigma,type="chol")
IRmat
colnames(Y)
IRmat <- IR_mat_generator(period=(period-1), p=(nrow(Coef_mat)-ncol(newdata)-1)/ncol(Y), Coef_mat=Coef_mat,Sigma=Sigma,type="chol") |>
lapply(IRmat, function(lst) rownemes(lst) <- colnames(Y))
IRmat <- IR_mat_generator(period=(period-1), p=(nrow(Coef_mat)-ncol(newdata)-1)/ncol(Y), Coef_mat=Coef_mat,Sigma=Sigma,type="chol") |>
lapply(IRmat, function(lst) rownames(lst) <- colnames(Y))
IRmat
# Impulse Response matrix generator
IR_mat_generator <- function(names, period, p, Coef_mat, Sigma, type=c("origin","chol","triangle")){
# type="origin"
colnames(Coef_mat) <- names
k <- ncol(Coef_mat)
#res <- vector("list",k)
res <- list()
for(i in seq_len(k)){
Ynew <- matrix(0,ncol=k,nrow=p)
Ynew[p,i] <- 1
for(j in seq_len(period)){
Y_update <- matrix(t(tail(Ynew,n=p)[rev(seq_len(p)),]),nrow=1,byrow=TRUE) %*% Coef_mat[1:(k*p),]
Ynew <- rbind(Ynew,Y_update)
}
#res[[i]] <- as_tibble(Ynew[p:(p+period),]) %>% mutate(term=0:period,.before=1)
res <- rbind(res, cbind( as.data.frame(Ynew[p:(p+period),]), response=colnames(Coef_mat)[i],term=0:period) )
}
# names(res) <-  colnames(Coef_mat)
# res1 <-imap(res, ~mutate(.x, impulse=.y,.before=1) %>%
#                pivot_longer(!one_of("term","impulse"),names_to = "response"))  %>%
#   do.call(rbind,.) %>%
#   arrange(term,factor(response,levels = colnames(Coef_mat))) %>%
#   pivot_wider(names_from="impulse",values_from="value") %>%
#   group_by(term) %>% nest() %>% ungroup()
res1 <- purrr::map(seq_len(period+1), ~(dplyr::filter(res,term==.x-1)) %>%
dplyr::select(-term) %>%
tibble::column_to_rownames(var = "response") %>%
as.data.frame() %>% t())
if(type=="origin") return(res1)
res2 <- lapply(res1, function(.x) .x%*%t(chol(Sigma)))
# res2 <- res1 %>% transmute(term=term, data=map(data, ~(as.matrix(.x[,-1])%*%t(chol(Sigma)) %>%
#                                                          as_tibble()) %>%
#                                                  set_names(colnames(Coef_mat)) %>%
#                                                  mutate(response=colnames(Coef_mat),.before=1)))
if(type=="chol") return(res2)
res3 <-  lapply(res2, function(.x) .x%*%diag(1/sqrt(diag(Sigma))))
# res3 <- res1 %>% transmute(term=term, data=map(data, ~(as.matrix(.x[,-1])%*%t(chol(Sigma))%*%diag(1/sqrt(diag(Sigma))) %>%
#                                                          as_tibble(.name_repair="minimal")) %>%
#                                                  set_names(colnames(Coef_mat)) %>%
#                                                  mutate(response=colnames(Coef_mat),.before=1)))
if(type=="triangle") return(res3)
}
devtools::load_all(".")
object$parameters$Sigma
rm(list=ls())
devtools::load_all(".")
devtools::load_all(".")
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary.OLS(object1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(object1, newdata=newdata)
plot.xts(pred1)
pred1
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=120, warmup = 50, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(object)
plot.bayesVAR(object, ncol.fig = 2)
# unconditional forecasting
pred2 <- predict(object, newdata=newdata)
bayesVAR:::plot.bayesVAR(pred2,ncol.fig=2)
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3),
INT_KTB3Y = c(1.2,1.3,1.6,1.7)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- predict(object, newdata=newdata, condition=condition)
devtools::load_all(".")
pred3 <- predict(object, newdata=newdata, condition=condition)
plot(pred3,ncol.fig=2)
pred2$fitted
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
library(bayesVAR)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary.OLS(object1)
devtools::load_all(".")
devtools::load_all(".")
library(bayesVAR)
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary.OLS(object1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(object1, newdata=newdata)
plot.xts(pred1)
pred1
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=120, warmup = 50, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(object)
plot.bayesVAR(object, ncol.fig = 2)
# unconditional forecasting
pred2 <- predict(object, newdata=newdata)
bayesVAR:::plot.bayesVAR(pred2,ncol.fig=2)
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3),
INT_KTB3Y = c(1.2,1.3,1.6,1.7)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- predict(object, newdata=newdata, condition=condition)
plot(pred3,ncol.fig=2)
pred2$fitted
summary(object1)
rm(list=ls())
library(bayesVAR)
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(object1, newdata=newdata)
plot(pred1)
graphics::plot
?graphics::plot
rm(list=ls())
library(bayesVAR)
?VAR_OLS
?VAR_OLS
devtools::load_all(".")
?VAR_OLS
devtools::load_all(".")
?VAR_OLS
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(object1, newdata=newdata)
plot(pred1)
plot(pred1)
plot
pred1
class(pred1)
plot(object1)
plot(pred1)
devtools::load_all(".")
plot(pred1)
plot(pred1)
plot.xts(pred1)
pred1
class(pred1)
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=120, warmup = 50, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(object)
plot.bayesVAR(object, ncol.fig = 2)
# unconditional forecasting
pred2 <- predict(object, newdata=newdata)
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(object)
plot.bayesVAR(object, ncol.fig = 2)
# unconditional forecasting
pred2 <- predict(object, newdata=newdata)
bayesVAR:::plot.bayesVAR(pred2,ncol.fig=2)
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3),
INT_KTB3Y = c(1.2,1.3,1.6,1.7)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- predict(object, newdata=newdata, condition=condition)
plot(pred3,ncol.fig=2)
pred2$fitted
library(bayesVAR)
library(bayesVAR)
library(bayesVAR)
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot.xts(data,multi.panel=TRUE,yaxis.same = FALSE)
plot(data,multi.panel=TRUE,yaxis.same = FALSE)
plot
?plot
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
library(bayesVAR)
library(bayesVAR)
library(bayesVAR)
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
library(bayesVAR)
library(bayesVAR)
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
class(object1)
summary(object1)
summary(object1)
plot(object1)
class(object1)
plot.OLS(object1)
plot(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
plot(object1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(object1, newdata=newdata)
plot.xts(pred1)
pred1
pred1 <- predict.OLS(object1, newdata=newdata)
devtools::load_all(".")
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
devtools::load_all(".")
summary(object1)
devtools::load_all(".")
summary(object1)
plot(object1)
devtools::load_all(".")
plot(object1)
devtools::load_all(".")
devtools::load_all(".")
plot(object1)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
plot(object1)
library(bayesVAR)
library(bayesVAR)
library(bayesVAR)
data(macrodata)
head(macrodata)
colnames(macrodata)
# subset
data <- macrodata[,c("RGDP_Q_G","INT_KTB3Y","USDKRW_G","INT_CALL")]
summary(data)
head(data)
plot(data,multi.panel=TRUE,yaxis.same = FALSE)
# obtain VAR coefficients ans Covariance by OLS
object1 <- VAR_OLS(data=data,p=3)
class(object1)
summary(object1)
plot(object1)
devtools::load_all(".")
plot(object1)
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(object1, newdata=newdata)
devtools::load_all(".")
newdata <- xts(data.frame(INT_CALL=c(0.81,0.91,1.0,1.2)),order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred1 <- predict(object1, newdata=newdata)
devtools::load_all(".")
devtools::load_all(".")
pred1 <- predict(object1, newdata=newdata)
plot.xts(pred1)
pred1
class(pred1)
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
devtools::load_all(".")
devtools::load_all(".")
# Bayesian VAR
object <- VAR_bayes(data,p=2, N=1500, warmup = 500, exos="INT_CALL",
minnesota_par=list(rho=0.8, lambdas = c(0.1, 0.5, 2, 100)))
class(object)
plot.bayesVAR(object, ncol.fig = 2)
# unconditional forecasting
pred2 <- predict(object, newdata=newdata)
bayesVAR:::plot.bayesVAR(pred2,ncol.fig=2)
# conditional forecasting
condition <- xts( data.frame(RGDP_Q_G = c(4.3,0.5,-4.5,-2.3),
INT_KTB3Y = c(1.2,1.3,1.6,1.7)),
order.by=as.yearqtr(seq(2021.5,2022.25,by=0.25)))
pred3 <- predict(object, newdata=newdata, condition=condition)
devtools::load_all(".")
devtools::load_all(".")
pred3 <- predict(object, newdata=newdata, condition=condition)
devtools::load_all(".")
devtools::load_all(".")
pred3 <- predict(object, newdata=newdata, condition=condition)
plot(pred3,ncol.fig=2)
pred2$fitted
